% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isco_srv.R
\name{isco_server}
\alias{isco_server}
\title{International Standard Classification of Occupations Server}
\usage{
isco_server(id, lang = "SPA")
}
\arguments{
\item{id}{The input slot that will be used to access the value}

\item{lang}{Un car√°cter indicando el lenguaje que queremos recuperar en formato
ISO 639-2 Alpha-3 (https://www.loc.gov/standards/iso639-2/php/code_list.php). This
parameter is 'eng' by default. Could be 'eng', 'spa', 'fre' or 'cat'.}
}
\value{
The function return a list containing reactives values. The list has 4 elements
major_code, submajor_code, minor_code and unit_code.
}
\description{
This functions allows the user to build the ISCO server
in a shiny app.
}
\examples{
\dontrun{
## Only run examples in interactive R sessions
if(interactive()) {

options(device.ask.default = FALSE)

library(shiny)

ui <- fluidPage(

 sidebarLayout(

   sidebarPanel(
     width = 3,
     isco_ui("isco")
   ),

   mainPanel(
     tableOutput("tbl")
   )
 )

)

server <- function(input, output, session) {

 mod_data <- isco_server("isco", lang = 'spa')


 output$tbl <- renderTable({

   get_definitions(lang = 'spa') \%>\%
     filter(major_code == mod_data$major_code()) \%>\%
     filter(submajor_code == mod_data$submajor_code()) \%>\%
     filter(minor_code == mod_data$minor_code()) \%>\%
     filter(unit_code == mod_data$unit_code()) \%>\%
     select(
       major_name,
       submajor_name,
       minor_name,
       unit_name
     )

 })



}

shinyApp(ui, server)

}
}

}
